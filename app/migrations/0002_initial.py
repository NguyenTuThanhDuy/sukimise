# Generated by Django 5.2 on 2025-04-07 05:29

import django.contrib.postgres.indexes
import django.db.models.deletion
import django.db.models.manager
import pgvector.django.indexes
import pgvector.django.vector
from django.contrib.postgres.operations import BtreeGinExtension
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app', '0001_vector_extension'),
    ]

    operations = [
        BtreeGinExtension(),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand_id', models.AutoField(help_text='brand id', primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=100, unique=True)),
                ('brand_description', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'db_table': 'ms_app_brand',
                'ordering': ['brand_name'],
                'default_manager_name': 'all_objects',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['brand_name', 'brand_description'], name='brand_gin_idx')],
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection_id', models.AutoField(help_text='collection id', primary_key=True, serialize=False)),
                ('collection_name', models.CharField(max_length=100, unique=True)),
                ('collection_description', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
                'db_table': 'ms_app_collection',
                'ordering': ['collection_name'],
                'default_manager_name': 'all_objects',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['collection_name', 'collection_description'], name='collection_gin_idx')],
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_id', models.AutoField(help_text='product id', primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=100, unique=True)),
                ('product_description', models.CharField(max_length=255)),
                ('product_description_vector', pgvector.django.vector.VectorField(dimensions=512)),
                ('active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.brand')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'ms_app_product',
                'ordering': ['product_name'],
                'default_manager_name': 'all_objects',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.collection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
            options={
                'db_table': 'ms_app_product_collection',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='collections',
            field=models.ManyToManyField(through='app.ProductCollection', to='app.collection'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier_id', models.AutoField(help_text='supplier id', primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=100, unique=True)),
                ('supplier_description', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'db_table': 'ms_app_supplier',
                'ordering': ['supplier_name'],
                'default_manager_name': 'all_objects',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['supplier_name', 'supplier_description'], name='supplier_gin_idx')],
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.supplier')),
            ],
            options={
                'db_table': 'ms_app_product_supplier',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='suppliers',
            field=models.ManyToManyField(through='app.ProductSupplier', to='app.supplier'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=pgvector.django.indexes.HnswIndex(ef_construction=100, fields=['product_description_vector'], m=32, name='product_vector_idx', opclasses=['vector_cosine_ops']),
        ),
        migrations.AddIndex(
            model_name='product',
            index=django.contrib.postgres.indexes.GinIndex(fields=['product_name', 'product_description'], name='product_gin_idx'),
        ),
    ]
