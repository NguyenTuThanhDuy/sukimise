version: "1.0"
name: "knowledge_base"

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_pgvector
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - sukimise

  pgadmin4:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "15432:80"
    networks:
      - sukimise
    depends_on:
      postgres:
        condition: service_healthy

  
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    volumes:
      - ./redis-data:/data
    networks:
      - sukimise
  
  redisnisight:
    container_name: redis_insight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    networks:
      - sukimise
    depends_on:
      redis:
        condition: service_healthy
  
  nginx:
    image: nginx:latest
    container_name: nginx
    # depends_on:
    #   - django
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    pull_policy: if_not_present
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    restart: always
  
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
    command: 
      - "--config.file=/etc/loki/local-config.yml"
    networks:
      - sukimise

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail:/etc/promtail
      - ./promtail/var/log:/var/log
    command: 
      - "--config.file=/etc/promtail/config.yml"
    networks:
      - sukimise
    depends_on:
      - loki

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - sukimise
    depends_on:
      postgres:
        condition: service_healthy
  
  redis_exporter:
    image: oliver006/redis_exporter
    container_name: redis_exporter
    environment:
      REDIS_ADDR: "redis:6379"
    ports:
      - "9121:9121"
    networks:
      - sukimise
    depends_on:
      redis:
        condition: service_healthy

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx_exporter
    command:
      - "-nginx.scrape-uri=http://nginx/nginx_status"
    ports:
      - "9113:9113"
    networks:
      - sukimise
    depends_on:
      - nginx

networks:
  sukimise:
    driver: bridge

volumes:
  postgres_pgvector:
  redis:
